{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adrian/Escritorio/Ironhack/FinalApp/client/src/components/pages/Users-list/Users-list.js\";\nimport React, { Component } from 'react';\nimport UsersService from './../../../service/users.service';\nimport { Container, Row, Col } from 'react-bootstrap'; // import UserCard from './Coaster-card'\n// import Loader from './../../shared/Spinner/Loader'\n// import CoasterForm from './../Coaster-form/Coaster-form'\n// import { Container, Row, Button, Modal } from 'react-bootstrap'\n// import './Coaster-list.css'\n\nclass UsersList extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      /* = () => this.refreshCoasters() */\n      this.usersService.getUsers().then(res => this.setState({\n        users: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.state = {\n      users: [] // showModal: false\n\n    };\n    this.usersService = new UsersService();\n  }\n\n  //     refreshCoasters = () => {\n  //         this.coastersService\n  //             .getCoasters()\n  //             .then(res => this.setState({ coasters: res.data }))\n  //             .catch(err => console.log(err))\n  //     }\n  //     handleModal = visible => this.setState({ showModal: visible })\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [\">Row\", this.state.users.map(elm => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: elm.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 42\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this) //             <>\n    //                 <Container>\n    //                     <h1>Listado de monta単as rusas</h1>\n    //                     <Button onClick={() => this.handleModal(true)} variant=\"dark\" size=\"sm\">Crear nueva monta単a rusa</Button>\n    //                     <Row>\n    //                         {\n    //                             this.state.coasters\n    //                                 ?\n    //                                 this.state.coasters.map(elm => <CoasterCard key={elm._id} {...elm} />)\n    //                                 :\n    //                                 <Loader />\n    //                         }\n    //                     </Row>\n    //                 </Container>\n    //                 <Modal show={this.state.showModal} onHide={() => this.handleModal(false)}>\n    //                     <Modal.Body>\n    //                         <CoasterForm closeModal={() => this.handleModal(false)} updateList={this.refreshCoasters} />\n    //                     </Modal.Body>\n    //                 </Modal>\n    //             </>\n    ;\n  }\n\n}\n\nexport default UsersList;","map":{"version":3,"sources":["/home/adrian/Escritorio/Ironhack/FinalApp/client/src/components/pages/Users-list/Users-list.js"],"names":["React","Component","UsersService","Container","Row","Col","UsersList","constructor","componentDidMount","usersService","getUsers","then","res","setState","users","data","catch","err","console","log","state","render","map","elm","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAkC,iBAAlC,C,CAEA;AACA;AACA;AAEA;AAGA;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAE9BM,EAAAA,WAAW,GAAG;AACV;;AADU,SASdC,iBATc,GASM,MAAM;AAAa;AACnC,WAAKC,YAAL,CACCC,QADD,GAECC,IAFD,CAEMC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,GAAG,CAACG;AAAZ,OAAd,CAFb,EAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHd;AAIH,KAda;;AAEV,SAAKG,KAAL,GAAa;AACTN,MAAAA,KAAK,EAAE,EADE,CAET;;AAFS,KAAb;AAIA,SAAKL,YAAL,GAAoB,IAAIP,YAAJ,EAApB;AACH;;AASL;AACA;AACA;AACA;AACA;AACA;AAEA;AAEImB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,SAAD;AAAA,yBAEC,KAAKD,KAAL,CAAWN,KAAX,CAAiBQ,GAAjB,CAAqBC,GAAG,iBAAI;AAAA,kBAAIA,GAAG,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA,cAA5B,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAMR;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AA/BQ;AAiCH;;AA7D6B;;AAgElC,eAAelB,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport UsersService from './../../../service/users.service'\nimport {Container, Row, Col} from 'react-bootstrap'\n\n// import UserCard from './Coaster-card'\n// import Loader from './../../shared/Spinner/Loader'\n// import CoasterForm from './../Coaster-form/Coaster-form'\n\n// import { Container, Row, Button, Modal } from 'react-bootstrap'\n\n\n// import './Coaster-list.css'\n\nclass UsersList extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            users: [],\n            // showModal: false\n        }\n        this.usersService = new UsersService()\n    }\n\n    componentDidMount = () => {            /* = () => this.refreshCoasters() */                              \n        this.usersService\n        .getUsers()\n        .then(res => this.setState({users: res.data}))\n        .catch(err => console.log(err))\n    }                  \n\n//     refreshCoasters = () => {\n//         this.coastersService\n//             .getCoasters()\n//             .then(res => this.setState({ coasters: res.data }))\n//             .catch(err => console.log(err))\n//     }\n\n//     handleModal = visible => this.setState({ showModal: visible })\n\n    render() {\n        return ( \n            <Container>\n                >Row\n            {this.state.users.map(elm => <p>{elm.name}</p>)}\n\n            </Container>\n//             <>\n//                 <Container>\n\n//                     <h1>Listado de monta単as rusas</h1>\n\n//                     <Button onClick={() => this.handleModal(true)} variant=\"dark\" size=\"sm\">Crear nueva monta単a rusa</Button>\n\n//                     <Row>\n//                         {\n//                             this.state.coasters\n//                                 ?\n//                                 this.state.coasters.map(elm => <CoasterCard key={elm._id} {...elm} />)\n//                                 :\n//                                 <Loader />\n//                         }\n//                     </Row>\n//                 </Container>\n\n\n//                 <Modal show={this.state.showModal} onHide={() => this.handleModal(false)}>\n//                     <Modal.Body>\n//                         <CoasterForm closeModal={() => this.handleModal(false)} updateList={this.refreshCoasters} />\n//                     </Modal.Body>\n//                 </Modal>\n\n//             </>\n        )\n    }\n}\n\nexport default UsersList"]},"metadata":{},"sourceType":"module"}