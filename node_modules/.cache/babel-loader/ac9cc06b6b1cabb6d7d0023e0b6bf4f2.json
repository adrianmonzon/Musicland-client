{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adrian/Escritorio/Ironhack/FinalApp/client/src/components/pages/Users-list/Users-list.js\";\nimport React, { Component } from 'react';\nimport UsersService from './../../../service/users.service';\nimport { Container, Row, Spinner } from 'react-bootstrap';\nimport UserCard from './User-card';\nimport './Users-list.css';\nimport './User-card.css';\n\nclass UsersList extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      /* = () => this.refreshCoasters() */\n      this.usersService.getUsers().then(res => this.setState({\n        users: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.state = {\n      users: undefined // showModal: false\n\n    };\n    this.usersService = new UsersService();\n  }\n\n  //     refreshCoasters = () => {\n  //         this.coastersService\n  //             .getCoasters()\n  //             .then(res => this.setState({ coasters: res.data }))\n  //             .catch(err => console.log(err))\n  //     }\n  //     handleModal = visible => this.setState({ showModal: visible })\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Listado de m\\xFAsicos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: this.state.users ? this.state.users.map(elm => /*#__PURE__*/_jsxDEV(UserCard, { ...elm\n          }, elm._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 49\n          }, this)) : /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) //             <>\n    //                 <Container>\n    //                     <h1>Listado de montañas rusas</h1>\n    //                     <Button onClick={() => this.handleModal(true)} variant=\"dark\" size=\"sm\">Crear nueva montaña rusa</Button>\n    //                     <Row>\n    //                         {\n    //                             this.state.coasters\n    //                                 ?\n    //                                 this.state.coasters.map(elm => <CoasterCard key={elm._id} {...elm} />)\n    //                                 :\n    //                                 <Loader />\n    //                         }\n    //                     </Row>\n    //                 </Container>\n    //                 <Modal show={this.state.showModal} onHide={() => this.handleModal(false)}>\n    //                     <Modal.Body>\n    //                         <CoasterForm closeModal={() => this.handleModal(false)} updateList={this.refreshCoasters} />\n    //                     </Modal.Body>\n    //                 </Modal>\n    //             </>\n    ;\n  }\n\n}\n\nexport default UsersList;","map":{"version":3,"sources":["/home/adrian/Escritorio/Ironhack/FinalApp/client/src/components/pages/Users-list/Users-list.js"],"names":["React","Component","UsersService","Container","Row","Spinner","UserCard","UsersList","constructor","componentDidMount","usersService","getUsers","then","res","setState","users","data","catch","err","console","log","state","undefined","render","map","elm","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,OAAxB,QAAsC,iBAAtC;AAEA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAO,kBAAP;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAE9BO,EAAAA,WAAW,GAAG;AACV;;AADU,SASdC,iBATc,GASM,MAAM;AAAa;AACnC,WAAKC,YAAL,CACCC,QADD,GAECC,IAFD,CAEMC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,GAAG,CAACG;AAAZ,OAAd,CAFb,EAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHd;AAIH,KAda;;AAEV,SAAKG,KAAL,GAAa;AACTN,MAAAA,KAAK,EAAEO,SADE,CAET;;AAFS,KAAb;AAIA,SAAKZ,YAAL,GAAoB,IAAIR,YAAJ,EAApB;AACH;;AASL;AACA;AACA;AACA;AACA;AACA;AAEA;AAEIqB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,gBAArB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAA,oBAEI,KAAKF,KAAL,CAAWN,KAAX,GAEA,KAAKM,KAAL,CAAWN,KAAX,CAAiBS,GAAjB,CAAqBC,GAAG,iBAAI,QAAC,QAAD,OAA4BA;AAA5B,aAAeA,GAAG,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA,kBAA5B,CAFA,gBAIA,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADJ,CAkBR;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AA3CQ;AA6CH;;AAzE6B;;AA4ElC,eAAenB,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport UsersService from './../../../service/users.service'\nimport {Container, Row, Spinner} from 'react-bootstrap'\n\nimport UserCard from './User-card'\n\nimport './Users-list.css'\nimport './User-card.css'\n\nclass UsersList extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            users: undefined,\n            // showModal: false\n        }\n        this.usersService = new UsersService()\n    }\n\n    componentDidMount = () => {            /* = () => this.refreshCoasters() */                              \n        this.usersService\n        .getUsers()\n        .then(res => this.setState({users: res.data}))\n        .catch(err => console.log(err))\n    }                  \n\n//     refreshCoasters = () => {\n//         this.coastersService\n//             .getCoasters()\n//             .then(res => this.setState({ coasters: res.data }))\n//             .catch(err => console.log(err))\n//     }\n\n//     handleModal = visible => this.setState({ showModal: visible })\n\n    render() {\n        return (\n            <>\n            <Filter />\n            <Container className=\"list-container\">\n                <h1>Listado de músicos</h1>\n                <Row>\n                {\n                    this.state.users \n                        ?\n                    this.state.users.map(elm => <UserCard key={elm._id} {...elm} />)\n                    :\n                    <Spinner animation=\"border\" />\n                }\n                </Row>\n           \n\n            </Container>\n            </>\n//             <>\n//                 <Container>\n\n//                     <h1>Listado de montañas rusas</h1>\n\n//                     <Button onClick={() => this.handleModal(true)} variant=\"dark\" size=\"sm\">Crear nueva montaña rusa</Button>\n\n//                     <Row>\n//                         {\n//                             this.state.coasters\n//                                 ?\n//                                 this.state.coasters.map(elm => <CoasterCard key={elm._id} {...elm} />)\n//                                 :\n//                                 <Loader />\n//                         }\n//                     </Row>\n//                 </Container>\n\n\n//                 <Modal show={this.state.showModal} onHide={() => this.handleModal(false)}>\n//                     <Modal.Body>\n//                         <CoasterForm closeModal={() => this.handleModal(false)} updateList={this.refreshCoasters} />\n//                     </Modal.Body>\n//                 </Modal>\n\n//             </>\n        )\n    }\n}\n\nexport default UsersList"]},"metadata":{},"sourceType":"module"}