{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adrian/Escritorio/Ironhack/FinalApp/client/src/components/pages/User-details/ContactForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Col, Button, Row } from 'react-bootstrap';\nimport MailService from './../../../service/mail.service';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.mailService.sendMail(this.state).then(response => {\n        if (response.data.status === 'success') {\n          alert(\"Message Sent.\");\n          this.resetForm();\n        } else if (response.data.status === 'fail') {\n          alert(\"Message failed to send.\");\n        }\n      });\n    };\n\n    this.confirmMessage = () => {\n      swal({\n        title: \"Mensaje enviado con Ã©xito\",\n        icon: \"success\"\n      }); // .then(() => {\n      //   const history = useHistory()\n      //   history.push('/')\n      // })\n    };\n\n    this.handleInputChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.state = {\n      contactEmail: this.props.contactUser.email,\n      contactName: this.props.contactUser.name,\n      name: this.props.loggedUser.name,\n      subject: `${this.props.loggedUser.name} quiere contactar contigo`,\n      message: ''\n    };\n    this.mailService = new MailService();\n  }\n\n  resetForm() {\n    this.setState({\n      name: '',\n      contactEmail: '',\n      message: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 6,\n            offset: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Contacta con \", this.state.contactName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"De\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter name\",\n              name: \"name\",\n              readOnly: true,\n              value: this.state.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Para\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter email\",\n              name: \"contactEmail\",\n              readOnly: true,\n              value: this.state.contactEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridSubject\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Asunto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"subject\",\n            value: this.state.subject,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridAddress2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Mensaje\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            name: \"message\",\n            value: this.state.message,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              span: 4,\n              offset: 5\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"btn btn-sm btn-light\",\n              type: \"submit\",\n              onClick: this.confirmMessage,\n              children: \"Contactar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/adrian/Escritorio/Ironhack/FinalApp/client/src/components/pages/User-details/ContactForm.js"],"names":["React","Component","Form","Col","Button","Row","MailService","swal","useHistory","ContactForm","constructor","props","handleSubmit","e","preventDefault","mailService","sendMail","state","then","response","data","status","alert","resetForm","confirmMessage","title","icon","handleInputChange","setState","target","name","value","contactEmail","contactUser","email","contactName","loggedUser","subject","message","render","span","offset"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Col, Button, Row } from 'react-bootstrap'\nimport MailService from './../../../service/mail.service'\nimport swal from 'sweetalert'\nimport { useHistory } from 'react-router-dom'\n\nclass ContactForm extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      contactEmail: this.props.contactUser.email,\n      contactName: this.props.contactUser.name,\n      name: this.props.loggedUser.name,\n      subject: `${this.props.loggedUser.name} quiere contactar contigo`,\n      message: ''\n    }\n    this.mailService = new MailService()\n  }\n\n  \n  handleSubmit = e => {\n    e.preventDefault()\n    this.mailService.sendMail(this.state)\n    .then((response) => {\n      if (response.data.status === 'success') {\n              alert(\"Message Sent.\");\n              this.resetForm()\n            } else if (response.data.status === 'fail') {\n              alert(\"Message failed to send.\")\n            }\n    })\n  }\n\n  resetForm() {\n    this.setState({ name: '', contactEmail: '', message: '' })\n  }\n\n  confirmMessage = () => {\n    swal({\n      title: \"Mensaje enviado con Ã©xito\",\n      icon: \"success\",\n    })\n    // .then(() => {\n    //   const history = useHistory()\n    //   history.push('/')\n    // })\n  }\n\n  handleInputChange = e => this.setState({ [e.target.name]: e.target.value })\n\n\n  render() {\n    return (\n      <section>\n        <Row>\n          <Col md={{ span: 6, offset: 3 }}>\n            <h3>Contacta con {this.state.contactName}</h3>\n          </Col>\n        </Row>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridName\">\n              <Form.Label>De</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter name\" name=\"name\" readOnly value={this.state.name}/>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridEmail\">\n              <Form.Label>Para</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter email\" name=\"contactEmail\" readOnly value={this.state.contactEmail}/>\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Group controlId=\"formGridSubject\">\n            <Form.Label>Asunto</Form.Label>\n            <Form.Control type=\"text\" name=\"subject\" value={this.state.subject}  onChange={this.handleInputChange} />\n          </Form.Group>\n\n          <Form.Group controlId=\"formGridAddress2\">\n            <Form.Label>Mensaje</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} name=\"message\" value={this.state.message} onChange={this.handleInputChange} />\n          </Form.Group>\n          <Row>\n            <Col md={{ span: 4, offset: 5 }}>\n              <Button variant=\"btn btn-sm btn-light\" type=\"submit\" onClick={this.confirmMessage}>Contactar</Button>\n            </Col>\n          </Row>\n        </Form>\n      </section>\n    )\n  }\n}\n\nexport default ContactForm"]},"metadata":{},"sourceType":"module"}