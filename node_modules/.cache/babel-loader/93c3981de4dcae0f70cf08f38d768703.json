{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/adrian/Escritorio/Ironhack/FinalApp/client/src/components/pages/Signup/Autocomplete.js\";\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport './Autocomplete.css';\n\nclass LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = address => {\n      this.setState({\n        address\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => {\n        this.props.setLocation([latLng.lat, latLng.lng]);\n        this.setState({\n          address: address\n        });\n      }).catch(error => console.error('Error', error));\n    };\n\n    this.state = {\n      address: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      children: ({\n        getInputProps,\n        suggestions,\n        getSuggestionItemProps,\n        loading\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n            placeholder: 'S ...',\n            className: 'location-search-input'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 41\n          }, this), suggestions.map((suggestion, idx) => {\n            const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n            const style = suggestion.active ? {\n              backgroundColor: '#fafafa',\n              color: 'black',\n              cursor: 'pointer'\n            } : {\n              backgroundColor: '#ffffff',\n              color: 'black',\n              cursor: 'pointer'\n            };\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                className,\n                style\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: suggestion.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 41\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LocationSearchInput;","map":{"version":3,"sources":["/home/adrian/Escritorio/Ironhack/FinalApp/client/src/components/pages/Signup/Autocomplete.js"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","LocationSearchInput","Component","constructor","props","handleChange","address","setState","handleSelect","then","results","latLng","setLocation","lat","lng","catch","error","console","state","render","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","idx","active","style","backgroundColor","color","cursor","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,IACIC,gBADJ,EAEIC,SAFJ,QAGO,2BAHP;AAKA,OAAO,oBAAP;;AAEA,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAAkD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,YALmB,GAKJC,OAAO,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACH,KAPkB;;AAAA,SASnBE,YATmB,GASJF,OAAO,IAAI;AACtBP,MAAAA,gBAAgB,CAACO,OAAD,CAAhB,CACKG,IADL,CACUC,OAAO,IAAIV,SAAS,CAACU,OAAO,CAAC,CAAD,CAAR,CAD9B,EAEKD,IAFL,CAEUE,MAAM,IAAI;AACZ,aAAKP,KAAL,CAAWQ,WAAX,CAAuB,CAACD,MAAM,CAACE,GAAR,EAAaF,MAAM,CAACG,GAApB,CAAvB;AACA,aAAKP,QAAL,CAAc;AAACD,UAAAA,OAAO,EAAEA;AAAV,SAAd;AACH,OALL,EAMKS,KANL,CAMWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CANpB;AAOH,KAjBkB;;AAEf,SAAKE,KAAL,GAAa;AAAEZ,MAAAA,OAAO,EAAE;AAAX,KAAb;AACH;;AAgBDa,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,kBAAD;AACI,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWZ,OADtB;AAEI,MAAA,QAAQ,EAAE,KAAKD,YAFnB;AAGI,MAAA,QAAQ,EAAE,KAAKG,YAHnB;AAAA,gBAKK,CAAC;AAAEY,QAAAA,aAAF;AAAiBC,QAAAA,WAAjB;AAA8BC,QAAAA,sBAA9B;AAAsDC,QAAAA;AAAtD,OAAD,kBACG;AAAA,gCACI,sBACQH,aAAa,CAAC;AACdI,YAAAA,WAAW,EAAE,OADC;AAEdC,YAAAA,SAAS,EAAE;AAFG,WAAD;AADrB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,qBACKF,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB,EAEKF,WAAW,CAACK,GAAZ,CAAgB,CAACC,UAAD,EAAaC,GAAb,KAAqB;AAClC,kBAAMH,SAAS,GAAGE,UAAU,CAACE,MAAX,GACZ,yBADY,GAEZ,iBAFN,CADkC,CAIlC;;AACA,kBAAMC,KAAK,GAAGH,UAAU,CAACE,MAAX,GACR;AAAEE,cAAAA,eAAe,EAAE,SAAnB;AAA8BC,cAAAA,KAAK,EAAE,OAArC;AAA8CC,cAAAA,MAAM,EAAE;AAAtD,aADQ,GAER;AAAEF,cAAAA,eAAe,EAAE,SAAnB;AAA8BC,cAAAA,KAAK,EAAE,OAArC;AAA8CC,cAAAA,MAAM,EAAE;AAAtD,aAFN;AAGA,gCACI,oBAEQX,sBAAsB,CAACK,UAAD,EAAa;AACnCF,gBAAAA,SADmC;AAEnCK,gBAAAA;AAFmC,eAAb,CAF9B;AAAA,qCAOI;AAAA,0BAAOH,UAAU,CAACO;AAAlB;AAAA;AAAA;AAAA;AAAA;AAPJ,eACSN,GADT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAWH,WAnBA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,YADJ;AAyCH;;AA9D6C;;AAiElD,eAAe3B,mBAAf","sourcesContent":["import React from 'react';\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    getLatLng,\n} from 'react-places-autocomplete';\n\nimport './Autocomplete.css'\n\nclass LocationSearchInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { address: '' };\n    }\n\n    handleChange = address => {\n        this.setState({ address });\n    };\n\n    handleSelect = address => {\n        geocodeByAddress(address)\n            .then(results => getLatLng(results[0]))\n            .then(latLng => {\n                this.props.setLocation([latLng.lat, latLng.lng])\n                this.setState({address: address})\n            })\n            .catch(error => console.error('Error', error));\n    };\n\n    render() {\n        return (\n            <PlacesAutocomplete\n                value={this.state.address}\n                onChange={this.handleChange}\n                onSelect={this.handleSelect}\n            >\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                    <div>\n                        <input\n                            {...getInputProps({\n                                placeholder: 'S ...',\n                                className: 'location-search-input',\n                            })}\n                        />\n                        <div className=\"autocomplete-dropdown-container\">\n                            {loading && <div>Loading...</div>}\n                            {suggestions.map((suggestion, idx) => {\n                                const className = suggestion.active\n                                    ? 'suggestion-item--active'\n                                    : 'suggestion-item';\n                                // inline style for demonstration purpose\n                                const style = suggestion.active\n                                    ? { backgroundColor: '#fafafa', color: 'black', cursor: 'pointer' }\n                                    : { backgroundColor: '#ffffff', color: 'black', cursor: 'pointer' };\n                                return (\n                                    <div\n                                        key={idx}\n                                        {...getSuggestionItemProps(suggestion, {\n                                            className,\n                                            style,\n                                        })}\n                                    >\n                                        <span>{suggestion.description}</span>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                )}\n            </PlacesAutocomplete>\n        );\n    }\n}\n\nexport default LocationSearchInput"]},"metadata":{},"sourceType":"module"}