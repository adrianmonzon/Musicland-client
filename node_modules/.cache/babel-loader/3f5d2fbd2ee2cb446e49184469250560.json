{"ast":null,"code":"import React, { Component } from \"react\";\nimport UsersService from \"../../../service/users.service\"; // import { Container, Row, Col } from 'react-bootstrap'\n// import UserCard from './Coaster-card'\n// import Loader from './../../shared/Spinner/Loader'\n// import CoasterForm from './../Coaster-form/Coaster-form'\n// import { Container, Row, Button, Modal } from 'react-bootstrap'\n// import './Coaster-list.css'\n\nclass UsersList extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      /* = () => this.refreshCoasters() */\n      this.usersService.getUsers().then(res => this.setState({\n        users: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.state = {\n      users: [] // showModal: false\n\n    };\n    this.usersService = new UsersService();\n  }\n\n  //     refreshCoasters = () => {\n  //         this.coastersService\n  //             .getCoasters()\n  //             .then(res => this.setState({ coasters: res.data }))\n  //             .catch(err => console.log(err))\n  //     }\n  //     handleModal = visible => this.setState({ showModal: visible })\n  render() {\n    return this.state.users.map(elm => {\n      elm.name;\n    }); //             <>\n    //                 <Container>\n    //                     <h1>Listado de monta単as rusas</h1>\n    //                     <Button onClick={() => this.handleModal(true)} variant=\"dark\" size=\"sm\">Crear nueva monta単a rusa</Button>\n    //                     <Row>\n    //                         {\n    //                             this.state.coasters\n    //                                 ?\n    //                                 this.state.coasters.map(elm => <CoasterCard key={elm._id} {...elm} />)\n    //                                 :\n    //                                 <Loader />\n    //                         }\n    //                     </Row>\n    //                 </Container>\n    //                 <Modal show={this.state.showModal} onHide={() => this.handleModal(false)}>\n    //                     <Modal.Body>\n    //                         <CoasterForm closeModal={() => this.handleModal(false)} updateList={this.refreshCoasters} />\n    //                     </Modal.Body>\n    //                 </Modal>\n    //             </>\n  }\n\n}\n\nexport default UsersList;","map":{"version":3,"sources":["/home/adrian/Escritorio/Ironhack/FinalApp/client/src/components/pages/Users-list/Users-list.js"],"names":["React","Component","UsersService","UsersList","constructor","componentDidMount","usersService","getUsers","then","res","setState","users","data","catch","err","console","log","state","render","map","elm","name"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gCAAzB,C,CACA;AAEA;AACA;AACA;AAEA;AAEA;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAChCG,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,iBATc,GASM,MAAM;AACxB;AACA,WAAKC,YAAL,CACGC,QADH,GAEGC,IAFH,CAESC,GAAD,IAAS,KAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF,GAAG,CAACG;AAAb,OAAd,CAFjB,EAGGC,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAID,KAfa;;AAEZ,SAAKG,KAAL,GAAa;AACXN,MAAAA,KAAK,EAAE,EADI,CAEX;;AAFW,KAAb;AAIA,SAAKL,YAAL,GAAoB,IAAIJ,YAAJ,EAApB;AACD;;AAUD;AACA;AACA;AACA;AACA;AACA;AAEA;AAEAgB,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKD,KAAL,CAAWN,KAAX,CAAiBQ,GAAjB,CAAsBC,GAAD,IAAS;AACnCA,MAAAA,GAAG,CAACC,IAAJ;AACD,KAFM,CAAP,CADO,CAKP;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACD;;AAzD+B;;AA4DlC,eAAelB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport UsersService from \"../../../service/users.service\";\n// import { Container, Row, Col } from 'react-bootstrap'\n\n// import UserCard from './Coaster-card'\n// import Loader from './../../shared/Spinner/Loader'\n// import CoasterForm from './../Coaster-form/Coaster-form'\n\n// import { Container, Row, Button, Modal } from 'react-bootstrap'\n\n// import './Coaster-list.css'\n\nclass UsersList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: [],\n      // showModal: false\n    };\n    this.usersService = new UsersService();\n  }\n\n  componentDidMount = () => {\n    /* = () => this.refreshCoasters() */\n    this.usersService\n      .getUsers()\n      .then((res) => this.setState({ users: res.data }))\n      .catch((err) => console.log(err));\n  };\n\n  //     refreshCoasters = () => {\n  //         this.coastersService\n  //             .getCoasters()\n  //             .then(res => this.setState({ coasters: res.data }))\n  //             .catch(err => console.log(err))\n  //     }\n\n  //     handleModal = visible => this.setState({ showModal: visible })\n\n  render() {\n    return this.state.users.map((elm) => {\n      elm.name;\n    });\n\n    //             <>\n    //                 <Container>\n\n    //                     <h1>Listado de monta単as rusas</h1>\n\n    //                     <Button onClick={() => this.handleModal(true)} variant=\"dark\" size=\"sm\">Crear nueva monta単a rusa</Button>\n\n    //                     <Row>\n    //                         {\n    //                             this.state.coasters\n    //                                 ?\n    //                                 this.state.coasters.map(elm => <CoasterCard key={elm._id} {...elm} />)\n    //                                 :\n    //                                 <Loader />\n    //                         }\n    //                     </Row>\n    //                 </Container>\n\n    //                 <Modal show={this.state.showModal} onHide={() => this.handleModal(false)}>\n    //                     <Modal.Body>\n    //                         <CoasterForm closeModal={() => this.handleModal(false)} updateList={this.refreshCoasters} />\n    //                     </Modal.Body>\n    //                 </Modal>\n\n    //             </>\n  }\n}\n\nexport default UsersList;\n"]},"metadata":{},"sourceType":"module"}